package testes;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

public class DatabaseTest {

    private static Connection connection;

    @BeforeAll
    public static void setUp() throws SQLException {
        // Estabelecer conex찾o com o banco de dados em mem처ria
        connection = DriverManager.getConnection("jdbc:hsqldb:mem:testdb", "SA", "");
        assertTrue(connection != null && !connection.isClosed());

        // Criar tabelas
        try (Statement stmt = connection.createStatement()) {
            stmt.execute("CREATE TABLE SOLICITANTE (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, NOME VARCHAR(255) NOT NULL, PRIMARY KEY(ID))");
            stmt.execute("CREATE TABLE AGENDAMENTO (ID BIGINT GENERATED BY DEFAULT AS IDENTITY, DATA TIMESTAMP, HORA VARCHAR(20), PRIMARY KEY(ID))");
        }
    }

    @Test
    public void testInsertData() throws SQLException {
        // Inserir dados na tabela SOLICITANTE
        try (Statement stmt = connection.createStatement()) {
            stmt.executeUpdate("INSERT INTO SOLICITANTE (NOME) VALUES ('Jo찾o')");
        }

        // Inserir dados na tabela AGENDAMENTO
        try (Statement stmt = connection.createStatement()) {
            stmt.executeUpdate("INSERT INTO AGENDAMENTO (DATA, HORA) VALUES (CURRENT_TIMESTAMP, '09:00')");
        }
    }

    @AfterAll
    public static void tearDown() throws SQLException {
        // Fechar conex찾o com o banco de dados
        if (connection != null && !connection.isClosed()) {
            connection.close();
        }
    }
}